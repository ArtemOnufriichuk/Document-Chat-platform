# Правила проекта DocumentChat

## Структура проекта
- Проект разделен на две части: frontend (Vite + React) и backend (Express + TypeScript)
- Frontend находится в директории /frontend/src/
- Backend находится в директории /backend/src/
- Общие типы и интерфейсы определены в backend/src/types/commonTypes.ts

## Стиль кода
- Используется TypeScript для типизации
- Для форматирования используются одинарные кавычки (')
- Отступы - табуляция
- Для стилизации используется Tailwind CSS

## Компоненты UI
- UI компоненты хранятся в frontend/src/components/ui/
- Основные компоненты приложения в frontend/src/components/
- Компоненты должны быть атомарными и переиспользуемыми
- Все компоненты с экспортом по умолчанию
- Имена файлов компонентов UI начинаются с заглавной буквы (Button.tsx)

## Глобальное состояние
- Для управления состоянием используется Zustand
- Хранилище определено в frontend/src/lib/store.ts
- API взаимодействия с сервером в frontend/src/lib/api.ts

## Маршрутизация
- Используется React Router для маршрутизации
- Защищенные маршруты определены через компонент ProtectedRoute в App.tsx
- Маршруты для администраторов определены через компонент AdminRoute в App.tsx

## Работа с API
- API запросы оформляются через функцию fetchApi в frontend/src/lib/api.ts
- Базовый URL для API: /api
- API структурировано по ресурсам: /api/documents, /api/chat, /api/files, /api/users

## Уведомления
- Для уведомлений используется система тостов через контекст ToastContext
- Импортировать useToast из frontend/src/lib/ToastContext.tsx
- Типы уведомлений: success, error, info, warning
- Для информационных уведомлений рекомендуется короткая длительность (2-3 сек)

## Формы и валидация
- Валидация форм производится на стороне клиента
- Отображать ошибки валидации под соответствующими полями
- Предусмотреть обработку ошибок от API

## Именование
- React-компоненты: PascalCase (DocumentList.tsx)
- Файлы утилит и хуков: camelCase
- Хуки начинаются с 'use': useToast
- CSS-классы: kebab-case через Tailwind

## Локализация
- Все пользовательские интерфейсы на русском языке
- Технические комментарии на русском языке

## Файлы
- Для документов используется директория /temp/
- Загрузка файлов через API /api/files
- Поддерживаемые форматы документов: PDF, TXT, DOCX

## Управление пользователями
- Доступ к управлению пользователями имеют только администраторы
- Компонент UserManagement доступен по маршруту /users
- Для изменения прав используется компонент Switch 