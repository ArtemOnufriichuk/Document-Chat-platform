import { useState, useCallback } from 'react';
import { useAppStore } from '../lib/store';
import { useToast } from '../lib/ToastContext';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogFooter } from './ui/Dialog';
import { Button } from './ui/Button';
import { Input } from './ui/Input';
import { Label } from './ui/Label';
import { Table, TableHeader, TableBody, TableRow, TableHead, TableCell } from './ui/Table';
import { Card, CardContent, CardHeader, CardTitle } from './ui/Card';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã
const formatDate = (dateString: string) => {
	try {
		const date = new Date(dateString);
		return date.toLocaleDateString('ru-RU', {
			day: '2-digit',
			month: '2-digit',
			year: 'numeric',
		});
	} catch {
		return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
	}
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è URL –¥–ª—è –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
const getEmbedUrl = (url: string) => {
	if (url.includes('drive.google.com/file/d/')) {
		// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –æ–±—ã—á–Ω–æ–π —Å—Å—ã–ª–∫–∏ Google Drive –≤ –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º—É—é
		const fileId = url.match(/\/file\/d\/([^\/]+)/)?.[1];
		if (fileId) {
			return `https://drive.google.com/file/d/${fileId}/preview`;
		}
	}
	return url;
};

interface DocumentListProps {
	onSelectDocument?: (documentId: string) => void;
}

export default function DocumentList({ onSelectDocument }: DocumentListProps) {
	const { documents, removeDocument, updateDocument } = useAppStore();
	const { showToast } = useToast();
	const [editDialogOpen, setEditDialogOpen] = useState(false);
	const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);
	const [previewDialogOpen, setPreviewDialogOpen] = useState(false);
	const [currentDocument, setCurrentDocument] = useState<{ id: string; title: string; url: string } | null>(null);
	const [editTitle, setEditTitle] = useState('');
	const [editUrl, setEditUrl] = useState('');
	const [previewError, setPreviewError] = useState(false);

	// –û—Ç–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
	const handleEditClick = (doc: { id: string; title: string; url: string }) => {
		setCurrentDocument(doc);
		setEditTitle(doc.title);
		setEditUrl(doc.url);
		setEditDialogOpen(true);
	};

	// –û—Ç–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
	const handleDeleteClick = (doc: { id: string; title: string; url: string }) => {
		setCurrentDocument(doc);
		setDeleteDialogOpen(true);
	};

	// –û—Ç–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
	const handlePreviewClick = (doc: { id: string; title: string; url: string }) => {
		setCurrentDocument(doc);
		setPreviewError(false);
		setPreviewDialogOpen(true);
	};

	// –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
	const handleSaveEdit = async () => {
		if (currentDocument) {
			try {
				await updateDocument(currentDocument.id, { title: editTitle, url: editUrl });
				setEditDialogOpen(false);

				// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
				showToast({
					title: '–î–æ–∫—É–º–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω',
					description: `–î–æ–∫—É–º–µ–Ω—Ç "${editTitle}" —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω`,
					type: 'success',
				});
			} catch (error) {
				// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
				showToast({
					title: '–û—à–∏–±–∫–∞',
					description: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç',
					type: 'error',
				});
			}
		}
	};

	// –£–¥–∞–ª–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç
	const handleConfirmDelete = async () => {
		if (currentDocument) {
			try {
				await removeDocument(currentDocument.id);
				setDeleteDialogOpen(false);

				// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏
				showToast({
					title: '–î–æ–∫—É–º–µ–Ω—Ç —É–¥–∞–ª–µ–Ω',
					description: `–î–æ–∫—É–º–µ–Ω—Ç "${currentDocument.title}" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω`,
					type: 'success',
				});
			} catch (error) {
				// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
				showToast({
					title: '–û—à–∏–±–∫–∞',
					description: '–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç',
					type: 'error',
				});
			}
		}
	};

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
	const handleDocumentSelect = (docId: string) => {
		if (onSelectDocument) {
			onSelectDocument(docId);

			// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã–±–æ—Ä–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
			const selectedDoc = documents.find((doc) => doc.id === docId);
			if (selectedDoc) {
				showToast({
					title: '–î–æ–∫—É–º–µ–Ω—Ç –≤—ã–±—Ä–∞–Ω',
					description: `–î–æ–∫—É–º–µ–Ω—Ç "${selectedDoc.title}" –≤—ã–±—Ä–∞–Ω –¥–ª—è —á–∞—Ç–∞`,
					type: 'info',
					duration: 3000, // –ö–æ—Ä–æ—Ç–∫–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
				});
			}
		}
	};

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ iframe
	const handlePreviewError = useCallback(() => {
		setPreviewError(true);
	}, []);

	return (
		<Card className='w-full'>
			<CardHeader className='p-4 border-b'>
				<CardTitle className='text-xl'>–î–æ–∫—É–º–µ–Ω—Ç—ã</CardTitle>
			</CardHeader>
			<CardContent className='p-4'>
				{documents.length === 0 ? (
					<div className='text-center py-8 bg-gray-50 rounded-lg'>
						<p className='text-gray-500'>–ù–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç.</p>
					</div>
				) : (
					<div className='overflow-x-auto'>
						<Table>
							<TableHeader>
								<TableRow>
									<TableHead>–ù–∞–∑–≤–∞–Ω–∏–µ</TableHead>
									<TableHead>URL</TableHead>
									<TableHead>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</TableHead>
									<TableHead>–û–±–Ω–æ–≤–ª–µ–Ω</TableHead>
									<TableHead>–î–µ–π—Å—Ç–≤–∏—è</TableHead>
								</TableRow>
							</TableHeader>
							<TableBody>
								{documents.map((doc) => (
									<TableRow key={doc.id}>
										<TableCell className='font-medium'>
											<button className='text-left hover:text-blue-600' onClick={() => handleDocumentSelect(doc.id)}>
												<div className='flex items-center'>
													<span className='mr-2'>üìÑ</span>
													{doc.title}
												</div>
											</button>
										</TableCell>
										<TableCell className='truncate max-w-[200px]'>
											<div className='flex items-center truncate'>
												<span className='mr-1'>üîó</span>
												<span className='truncate text-xs text-gray-500'>{doc.url}</span>
											</div>
										</TableCell>
										<TableCell>
											<div className='flex items-center text-xs text-gray-500'>
												<span className='mr-1'>üìÖ</span>
												{formatDate(doc.createdAt)}
											</div>
										</TableCell>
										<TableCell>
											<div className='flex items-center text-xs text-gray-500'>
												<span className='mr-1'>üïì</span>
												{formatDate(doc.updatedAt)}
											</div>
										</TableCell>
										<TableCell>
											<div className='flex gap-2'>
												<Button size='sm' variant='outline' onClick={() => handlePreviewClick(doc)}>
													üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä
												</Button>
												<Button size='sm' variant='outline' onClick={() => handleEditClick(doc)}>
													‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å
												</Button>
												<Button size='sm' variant='primary' onClick={() => handleDeleteClick(doc)}>
													üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
												</Button>
											</div>
										</TableCell>
									</TableRow>
								))}
							</TableBody>
						</Table>
					</div>
				)}

				{/* –î–∏–∞–ª–æ–≥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ */}
				<Dialog open={editDialogOpen} onOpenChange={setEditDialogOpen}>
					<DialogContent>
						<DialogHeader>
							<DialogTitle>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç</DialogTitle>
							<DialogDescription>–í–Ω–µ—Å–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –¥–æ–∫—É–º–µ–Ω—Ç –∏ –Ω–∞–∂–º–∏—Ç–µ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å.</DialogDescription>
						</DialogHeader>
						<div className='grid gap-4 py-4'>
							<div className='grid gap-2'>
								<Label htmlFor='title'>–ù–∞–∑–≤–∞–Ω–∏–µ</Label>
								<Input id='title' value={editTitle} onChange={(e) => setEditTitle(e.target.value)} />
							</div>
							<div className='grid gap-2'>
								<Label htmlFor='url'>URL</Label>
								<Input id='url' value={editUrl} onChange={(e) => setEditUrl(e.target.value)} />
							</div>
						</div>
						<DialogFooter>
							<Button variant='outline' onClick={() => setEditDialogOpen(false)}>
								–û—Ç–º–µ–Ω–∞
							</Button>
							<Button onClick={handleSaveEdit}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</Button>
						</DialogFooter>
					</DialogContent>
				</Dialog>

				{/* –î–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è */}
				<Dialog open={deleteDialogOpen} onOpenChange={setDeleteDialogOpen}>
					<DialogContent>
						<DialogHeader>
							<DialogTitle>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è</DialogTitle>
							<DialogDescription>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç "{currentDocument?.title}"? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.</DialogDescription>
						</DialogHeader>
						<DialogFooter>
							<Button variant='outline' onClick={() => setDeleteDialogOpen(false)}>
								–û—Ç–º–µ–Ω–∞
							</Button>
							<Button variant='primary' onClick={handleConfirmDelete}>
								–£–¥–∞–ª–∏—Ç—å
							</Button>
						</DialogFooter>
					</DialogContent>
				</Dialog>

				{/* –î–∏–∞–ª–æ–≥ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ */}
				<Dialog open={previewDialogOpen} onOpenChange={setPreviewDialogOpen}>
					<DialogContent className='max-w-[800px]'>
						<DialogHeader>
							<DialogTitle>–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞: {currentDocument?.title}</DialogTitle>
							<DialogDescription>URL: {currentDocument?.url}</DialogDescription>
						</DialogHeader>
						{previewError ? (
							<div className='text-center p-8'>
								<p className='text-red-500 mb-2'>‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞</p>
								<p className='text-sm text-gray-500'>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –µ–≥–æ –Ω–∞–ø—Ä—è–º—É—é.</p>
							</div>
						) : (
							<div className='aspect-video bg-gray-100 rounded-md overflow-hidden'>
								{currentDocument && (
									<iframe
										src={getEmbedUrl(currentDocument.url)}
										className='w-full h-full'
										title={currentDocument.title}
										sandbox='allow-scripts allow-same-origin'
										loading='lazy'
										referrerPolicy='no-referrer'
										onError={handlePreviewError}
									/>
								)}
							</div>
						)}
						<div className='flex justify-center mt-2'>
							<a
								href={currentDocument?.url || ''}
								target='_blank'
								rel='noopener noreferrer'
								className='bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded inline-flex items-center'>
								üîó –û—Ç–∫—Ä—ã—Ç—å –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
							</a>
						</div>
					</DialogContent>
				</Dialog>
			</CardContent>
		</Card>
	);
}
